{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { FontLoader } from 'three';\nimport Text from './helpers/Text';\nimport { generateVectors, gaussianFunction } from '../../../../utils';\nimport fontAsset from '../../../../media/fonts/Montserrat_Medium.json';\nconst GAUSSIAN_PEAK = 50;\n\nclass Name {\n  // Font stuff\n  constructor(camera, scene) {\n    _defineProperty(this, \"text\", null);\n\n    _defineProperty(this, \"vectors\", null);\n\n    _defineProperty(this, \"fontSize\", 65);\n\n    _defineProperty(this, \"fontExtrusion\", 10);\n\n    _defineProperty(this, \"zDepth\", 0);\n\n    _defineProperty(this, \"handleResize\", () => {\n      // This resize must come after camera resize\n      this.text.letterMeshes.forEach(letter => {\n        letter.posZ = this.camera.zDepth;\n      });\n    });\n\n    this.camera = camera; // TODO: Rethink responsivity\n\n    const fontLoader = new FontLoader();\n    const font = fontLoader.parse(fontAsset);\n    const options = {\n      font: font,\n      fontSize: this.fontSize,\n      fontExtrusion: 10,\n      titleLeftMargin: 100\n    }; // Creating text mesh and adding to scene\n\n    this.text = new Text('Gil Domingues', null, options);\n    this.text.addToScene(scene);\n    this.vectors = generateVectors(13, this.camera.zDepth, GAUSSIAN_PEAK);\n    this.text.letterMeshes.forEach(letter => {\n      letter.posX = letter.transX - this.text.width / 2;\n      letter.posZ = this.camera.zDepth;\n      letter.mesh.position.x = letter.posX;\n      letter.mesh.position.z = letter.posZ;\n    });\n  }\n\n  animate(time, mouse, enableInteraction) {\n    const stdDevX = 0.3;\n    const stdDevY = 2.5;\n    const shouldAnimateText = enableInteraction && (mouse.x !== mouse.oldX && mouse.y !== mouse.oldY || mouse.x !== null);\n\n    if (shouldAnimateText) {\n      const xAlongText = (mouse.x - window.innerWidth / 2 + this.text.width / 2) / this.text.width;\n      const yAlongText = (mouse.y - window.innerHeight / 2 + this.text.height / 2) / this.text.height;\n      this.text.letterMeshes.forEach((letter, index) => {\n        const gaussianFactorX = gaussianFunction(letter.transX / this.text.width, xAlongText, stdDevX);\n        const gaussianFactorY = gaussianFunction(yAlongText, 0, stdDevY);\n        const rotationGaussianFactor = gaussianFactorX * gaussianFactorY;\n        const translationGaussianFactor = GAUSSIAN_PEAK * rotationGaussianFactor;\n        letter.mesh.position.x += (letter.posX + this.vectors[index].x * translationGaussianFactor - letter.mesh.position.x) * 0.1;\n        letter.mesh.position.y += (letter.posY + this.vectors[index].y * translationGaussianFactor - letter.mesh.position.y) * 0.1;\n        letter.mesh.position.z += (letter.posZ + this.vectors[index].z * translationGaussianFactor - letter.mesh.position.z) * 0.1; // Rotation\n\n        letter.mesh.rotation.x += (this.vectors[index].rotX * rotationGaussianFactor - letter.mesh.rotation.x) * 0.1;\n        letter.mesh.rotation.y += (this.vectors[index].rotY * rotationGaussianFactor - letter.mesh.rotation.y) * 0.1;\n        letter.mesh.rotation.z += (this.vectors[index].rotZ * rotationGaussianFactor - letter.mesh.rotation.z) * 0.1;\n      });\n    }\n  }\n\n}\n\nexport default Name;","map":{"version":3,"sources":["/Users/gil/Projects/dominguesgm.github.io/src/shared/components/canvas/components/name/Name.js"],"names":["FontLoader","Text","generateVectors","gaussianFunction","fontAsset","GAUSSIAN_PEAK","Name","constructor","camera","scene","text","letterMeshes","forEach","letter","posZ","zDepth","fontLoader","font","parse","options","fontSize","fontExtrusion","titleLeftMargin","addToScene","vectors","posX","transX","width","mesh","position","x","z","animate","time","mouse","enableInteraction","stdDevX","stdDevY","shouldAnimateText","oldX","y","oldY","xAlongText","window","innerWidth","yAlongText","innerHeight","height","index","gaussianFactorX","gaussianFactorY","rotationGaussianFactor","translationGaussianFactor","posY","rotation","rotX","rotY","rotZ"],"mappings":";;AAAA,SACCA,UADD,QAEO,OAFP;AAGA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SACCC,eADD,EAECC,gBAFD,QAGO,mBAHP;AAKA,OAAOC,SAAP,MAAsB,gDAAtB;AAEA,MAAMC,aAAa,GAAG,EAAtB;;AAEA,MAAMC,IAAN,CAAW;AAIV;AAKAC,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgB;AAAA,kCARpB,IAQoB;;AAAA,qCAPjB,IAOiB;;AAAA,sCAJhB,EAIgB;;AAAA,2CAHX,EAGW;;AAAA,oCAFlB,CAEkB;;AAAA,0CA6BZ,MAAM;AACpB;AAEA,WAAKC,IAAL,CAAUC,YAAV,CAAuBC,OAAvB,CAAgCC,MAAD,IAAY;AAC1CA,QAAAA,MAAM,CAACC,IAAP,GAAc,KAAKN,MAAL,CAAYO,MAA1B;AACA,OAFD;AAGA,KAnC0B;;AAC1B,SAAKP,MAAL,GAAcA,MAAd,CAD0B,CAG1B;;AAEA,UAAMQ,UAAU,GAAG,IAAIhB,UAAJ,EAAnB;AACA,UAAMiB,IAAI,GAAGD,UAAU,CAACE,KAAX,CAAiBd,SAAjB,CAAb;AAEA,UAAMe,OAAO,GAAG;AACfF,MAAAA,IAAI,EAAEA,IADS;AAEfG,MAAAA,QAAQ,EAAE,KAAKA,QAFA;AAGfC,MAAAA,aAAa,EAAE,EAHA;AAIfC,MAAAA,eAAe,EAAE;AAJF,KAAhB,CAR0B,CAe1B;;AACA,SAAKZ,IAAL,GAAY,IAAIT,IAAJ,CAAS,eAAT,EAA0B,IAA1B,EAAgCkB,OAAhC,CAAZ;AACA,SAAKT,IAAL,CAAUa,UAAV,CAAqBd,KAArB;AACA,SAAKe,OAAL,GAAetB,eAAe,CAAC,EAAD,EAAK,KAAKM,MAAL,CAAYO,MAAjB,EAAyBV,aAAzB,CAA9B;AAEA,SAAKK,IAAL,CAAUC,YAAV,CAAuBC,OAAvB,CAAgCC,MAAD,IAAY;AAC1CA,MAAAA,MAAM,CAACY,IAAP,GAAcZ,MAAM,CAACa,MAAP,GAAgB,KAAKhB,IAAL,CAAUiB,KAAV,GAAkB,CAAhD;AACAd,MAAAA,MAAM,CAACC,IAAP,GAAc,KAAKN,MAAL,CAAYO,MAA1B;AAEAF,MAAAA,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBC,CAArB,GAAyBjB,MAAM,CAACY,IAAhC;AACAZ,MAAAA,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBE,CAArB,GAAyBlB,MAAM,CAACC,IAAhC;AACA,KAND;AAOA;;AAUDkB,EAAAA,OAAO,CAACC,IAAD,EAAOC,KAAP,EAAcC,iBAAd,EAAiC;AACvC,UAAMC,OAAO,GAAG,GAAhB;AACA,UAAMC,OAAO,GAAG,GAAhB;AAEA,UAAMC,iBAAiB,GAAGH,iBAAiB,KACxCD,KAAK,CAACJ,CAAN,KAAYI,KAAK,CAACK,IAAlB,IACFL,KAAK,CAACM,CAAN,KAAYN,KAAK,CAACO,IADjB,IAEDP,KAAK,CAACJ,CAAN,KAAY,IAH8B,CAA3C;;AAKA,QAAGQ,iBAAH,EAAsB;AACrB,YAAMI,UAAU,GAAG,CAACR,KAAK,CAACJ,CAAN,GAAWa,MAAM,CAACC,UAAP,GAAkB,CAA7B,GAAmC,KAAKlC,IAAL,CAAUiB,KAAV,GAAgB,CAApD,IAA0D,KAAKjB,IAAL,CAAUiB,KAAvF;AACA,YAAMkB,UAAU,GAAG,CAACX,KAAK,CAACM,CAAN,GAAWG,MAAM,CAACG,WAAP,GAAmB,CAA9B,GAAoC,KAAKpC,IAAL,CAAUqC,MAAV,GAAiB,CAAtD,IAA4D,KAAKrC,IAAL,CAAUqC,MAAzF;AAEA,WAAKrC,IAAL,CAAUC,YAAV,CAAuBC,OAAvB,CAA+B,CAACC,MAAD,EAASmC,KAAT,KAAmB;AACjD,cAAMC,eAAe,GAAG9C,gBAAgB,CACvCU,MAAM,CAACa,MAAP,GAAgB,KAAKhB,IAAL,CAAUiB,KADa,EAEvCe,UAFuC,EAGvCN,OAHuC,CAAxC;AAKA,cAAMc,eAAe,GAAG/C,gBAAgB,CACvC0C,UADuC,EAEvC,CAFuC,EAGvCR,OAHuC,CAAxC;AAMA,cAAMc,sBAAsB,GAAGF,eAAe,GAAGC,eAAjD;AACA,cAAME,yBAAyB,GAAG/C,aAAa,GAAG8C,sBAAlD;AAEAtC,QAAAA,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBC,CAArB,IAA0B,CAACjB,MAAM,CAACY,IAAP,GAAc,KAAKD,OAAL,CAAawB,KAAb,EAAoBlB,CAApB,GAAwBsB,yBAAtC,GAAkEvC,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBC,CAAxF,IAA6F,GAAvH;AACAjB,QAAAA,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBW,CAArB,IAA0B,CAAC3B,MAAM,CAACwC,IAAP,GAAc,KAAK7B,OAAL,CAAawB,KAAb,EAAoBR,CAApB,GAAwBY,yBAAtC,GAAkEvC,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBW,CAAxF,IAA6F,GAAvH;AACA3B,QAAAA,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBE,CAArB,IAA0B,CAAClB,MAAM,CAACC,IAAP,GAAc,KAAKU,OAAL,CAAawB,KAAb,EAAoBjB,CAApB,GAAwBqB,yBAAtC,GAAkEvC,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBE,CAAxF,IAA6F,GAAvH,CAjBiD,CAmBjD;;AACAlB,QAAAA,MAAM,CAACe,IAAP,CAAY0B,QAAZ,CAAqBxB,CAArB,IAA0B,CAAC,KAAKN,OAAL,CAAawB,KAAb,EAAoBO,IAApB,GAA2BJ,sBAA3B,GAAoDtC,MAAM,CAACe,IAAP,CAAY0B,QAAZ,CAAqBxB,CAA1E,IAA+E,GAAzG;AACAjB,QAAAA,MAAM,CAACe,IAAP,CAAY0B,QAAZ,CAAqBd,CAArB,IAA0B,CAAC,KAAKhB,OAAL,CAAawB,KAAb,EAAoBQ,IAApB,GAA2BL,sBAA3B,GAAoDtC,MAAM,CAACe,IAAP,CAAY0B,QAAZ,CAAqBd,CAA1E,IAA+E,GAAzG;AACA3B,QAAAA,MAAM,CAACe,IAAP,CAAY0B,QAAZ,CAAqBvB,CAArB,IAA0B,CAAC,KAAKP,OAAL,CAAawB,KAAb,EAAoBS,IAApB,GAA2BN,sBAA3B,GAAoDtC,MAAM,CAACe,IAAP,CAAY0B,QAAZ,CAAqBvB,CAA1E,IAA+E,GAAzG;AACA,OAvBD;AAwBA;AACD;;AApFS;;AAuFX,eAAezB,IAAf","sourcesContent":["import {\n\tFontLoader,\n} from 'three';\nimport Text from './helpers/Text';\nimport {\n\tgenerateVectors,\n\tgaussianFunction,\n} from '../../../../utils';\n\nimport fontAsset from '../../../../media/fonts/Montserrat_Medium.json';\n\nconst GAUSSIAN_PEAK = 50;\n\nclass Name {\n\ttext = null;\n\tvectors = null;\n\n\t// Font stuff\n\tfontSize = 65;\n\tfontExtrusion = 10;\n\tzDepth = 0;\n\n\tconstructor(camera, scene) {\n\t\tthis.camera = camera;\n\n\t\t// TODO: Rethink responsivity\n\n\t\tconst fontLoader = new FontLoader();\n\t\tconst font = fontLoader.parse(fontAsset);\n\n\t\tconst options = {\n\t\t\tfont: font,\n\t\t\tfontSize: this.fontSize,\n\t\t\tfontExtrusion: 10,\n\t\t\ttitleLeftMargin: 100,\n\t\t};\n\n\t\t// Creating text mesh and adding to scene\n\t\tthis.text = new Text('Gil Domingues', null, options);\n\t\tthis.text.addToScene(scene);\n\t\tthis.vectors = generateVectors(13, this.camera.zDepth, GAUSSIAN_PEAK);\n\n\t\tthis.text.letterMeshes.forEach((letter) => {\n\t\t\tletter.posX = letter.transX - this.text.width / 2;\n\t\t\tletter.posZ = this.camera.zDepth;\n\n\t\t\tletter.mesh.position.x = letter.posX;\n\t\t\tletter.mesh.position.z = letter.posZ;\n\t\t});\n\t}\n\n\thandleResize = () => {\n\t\t// This resize must come after camera resize\n\n\t\tthis.text.letterMeshes.forEach((letter) => {\n\t\t\tletter.posZ = this.camera.zDepth;\n\t\t});\n\t}\n\n\tanimate(time, mouse, enableInteraction) {\n\t\tconst stdDevX = 0.3;\n\t\tconst stdDevY = 2.5;\n\n\t\tconst shouldAnimateText = enableInteraction &&\n\t\t\t((mouse.x !== mouse.oldX &&\n\t\t\tmouse.y !== mouse.oldY) ||\n\t\t\tmouse.x !== null);\n\n\t\tif(shouldAnimateText) {\n\t\t\tconst xAlongText = (mouse.x - (window.innerWidth/2) + (this.text.width/2)) / this.text.width;\n\t\t\tconst yAlongText = (mouse.y - (window.innerHeight/2) + (this.text.height/2)) / this.text.height;\n\n\t\t\tthis.text.letterMeshes.forEach((letter, index) => {\n\t\t\t\tconst gaussianFactorX = gaussianFunction(\n\t\t\t\t\tletter.transX / this.text.width,\n\t\t\t\t\txAlongText,\n\t\t\t\t\tstdDevX\n\t\t\t\t);\n\t\t\t\tconst gaussianFactorY = gaussianFunction(\n\t\t\t\t\tyAlongText,\n\t\t\t\t\t0,\n\t\t\t\t\tstdDevY\n\t\t\t\t);\n\n\t\t\t\tconst rotationGaussianFactor = gaussianFactorX * gaussianFactorY;\n\t\t\t\tconst translationGaussianFactor = GAUSSIAN_PEAK * rotationGaussianFactor;\n\n\t\t\t\tletter.mesh.position.x += (letter.posX + this.vectors[index].x * translationGaussianFactor - letter.mesh.position.x) * 0.1;\n\t\t\t\tletter.mesh.position.y += (letter.posY + this.vectors[index].y * translationGaussianFactor - letter.mesh.position.y) * 0.1;\n\t\t\t\tletter.mesh.position.z += (letter.posZ + this.vectors[index].z * translationGaussianFactor - letter.mesh.position.z) * 0.1;\n\n\t\t\t\t// Rotation\n\t\t\t\tletter.mesh.rotation.x += (this.vectors[index].rotX * rotationGaussianFactor - letter.mesh.rotation.x) * 0.1;\n\t\t\t\tletter.mesh.rotation.y += (this.vectors[index].rotY * rotationGaussianFactor - letter.mesh.rotation.y) * 0.1;\n\t\t\t\tletter.mesh.rotation.z += (this.vectors[index].rotZ * rotationGaussianFactor - letter.mesh.rotation.z) * 0.1;\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport default Name;\n"]},"metadata":{},"sourceType":"module"}