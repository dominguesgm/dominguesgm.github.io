{"ast":null,"code":"var _jsxFileName = \"/Users/gil/Projects/dominguesgm.github.io/src/shared/components/scroll-hint/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport classNames from 'class-names';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport useWindowDimension from '../../hooks/window-dimension/useWindowDimension';\nimport styles from './ScrollHint.css';\n\nconst ScrollHint = () => {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const hideAfterScroll = useRef(false);\n  const windowDimensions = useWindowDimension();\n  const handleClick = useCallback(() => {\n    window.scrollTo({\n      top: windowDimensions.height * 2,\n      behavior: 'smooth'\n    });\n  }, [windowDimensions]);\n  const handleKeyPress = useCallback(event => {\n    if (event.key === 'Enter') handleClick();\n  }, [windowDimensions]);\n\n  const handleScroll = () => {\n    if (!hideAfterScroll.current && window.scrollY > 100) {\n      hideAfterScroll.current = true;\n      setVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    setVisible(true);\n\n    if (false) {\n      window.addEventListener('scroll', handleScroll, {\n        passive: true\n      });\n    }\n\n    () => {\n      window.removeEventListener('scroll', handleScroll, {\n        passive: true\n      });\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: classNames(styles.hint, visible && styles.visible),\n    onClick: handleClick,\n    onKeyPress: handleKeyPress,\n    tabIndex: \"0\",\n    role: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: classNames(styles.text, visible && styles.visible),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }, \"About me\"), __jsx(\"div\", {\n    className: classNames(styles.arrow, visible && styles.visible),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faArrowDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default ScrollHint;","map":{"version":3,"sources":["/Users/gil/Projects/dominguesgm.github.io/src/shared/components/scroll-hint/index.js"],"names":["React","useEffect","useState","useRef","useCallback","classNames","FontAwesomeIcon","faArrowDown","useWindowDimension","styles","ScrollHint","visible","setVisible","hideAfterScroll","windowDimensions","handleClick","window","scrollTo","top","height","behavior","handleKeyPress","event","key","handleScroll","current","scrollY","addEventListener","passive","removeEventListener","hint","text","arrow"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAOC,kBAAP,MAA+B,iDAA/B;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACxB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMW,eAAe,GAAGV,MAAM,CAAC,KAAD,CAA9B;AACA,QAAMW,gBAAgB,GAAGN,kBAAkB,EAA3C;AAEA,QAAMO,WAAW,GAAGX,WAAW,CAAC,MAAM;AACrCY,IAAAA,MAAM,CAACC,QAAP,CAAgB;AAAEC,MAAAA,GAAG,EAACJ,gBAAgB,CAACK,MAAjB,GAAwB,CAA9B;AAAiCC,MAAAA,QAAQ,EAAE;AAA3C,KAAhB;AACA,GAF8B,EAE5B,CAACN,gBAAD,CAF4B,CAA/B;AAIA,QAAMO,cAAc,GAAGjB,WAAW,CAAEkB,KAAD,IAAW;AAC7C,QAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAA0BR,WAAW;AACrC,GAFiC,EAE/B,CAACD,gBAAD,CAF+B,CAAlC;;AAIA,QAAMU,YAAY,GAAG,MAAM;AAC1B,QAAG,CAACX,eAAe,CAACY,OAAjB,IAA4BT,MAAM,CAACU,OAAP,GAAiB,GAAhD,EAAqD;AACpDb,MAAAA,eAAe,CAACY,OAAhB,GAA0B,IAA1B;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD,GALD;;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACfW,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,eAAmC;AAClCI,MAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC,EAAgD;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAhD;AACA;;AAED,UAAM;AACLZ,MAAAA,MAAM,CAACa,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,EAAmD;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAnD;AACA,KAFD;AAGA,GATQ,EASN,EATM,CAAT;AAWA,SACC;AAAK,IAAA,SAAS,EAAEvB,UAAU,CAACI,MAAM,CAACqB,IAAR,EAAcnB,OAAO,IAAIF,MAAM,CAACE,OAAhC,CAA1B;AACC,IAAA,OAAO,EAAEI,WADV;AAEC,IAAA,UAAU,EAAEM,cAFb;AAGC,IAAA,QAAQ,EAAC,GAHV;AAIC,IAAA,IAAI,EAAC,QAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC;AAAK,IAAA,SAAS,EAAEhB,UAAU,CAACI,MAAM,CAACsB,IAAR,EAAcpB,OAAO,IAAIF,MAAM,CAACE,OAAhC,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,EAQC;AAAK,IAAA,SAAS,EAAEN,UAAU,CAACI,MAAM,CAACuB,KAAR,EAAerB,OAAO,IAAIF,MAAM,CAACE,OAAjC,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAGJ,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CARD,CADD;AAcA,CA7CD;;AA+CA,eAAeG,UAAf","sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport classNames from 'class-names';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport useWindowDimension from '../../hooks/window-dimension/useWindowDimension';\n\nimport styles from './ScrollHint.css';\n\nconst ScrollHint = () => {\n\tconst [visible, setVisible] = useState(false);\n\tconst hideAfterScroll = useRef(false);\n\tconst windowDimensions = useWindowDimension();\n\n\tconst handleClick = useCallback(() => {\n\t\twindow.scrollTo({ top:windowDimensions.height*2, behavior: 'smooth' });\n\t}, [windowDimensions]);\n\n\tconst handleKeyPress = useCallback((event) => {\n\t\tif(event.key === 'Enter') handleClick();\n\t}, [windowDimensions]);\n\n\tconst handleScroll = () => {\n\t\tif(!hideAfterScroll.current && window.scrollY > 100) {\n\t\t\thideAfterScroll.current = true;\n\t\t\tsetVisible(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsetVisible(true);\n\t\tif(typeof(window) !== 'undefined') {\n\t\t\twindow.addEventListener('scroll', handleScroll, { passive: true });\n\t\t}\n\n\t\t() => {\n\t\t\twindow.removeEventListener('scroll', handleScroll, { passive: true });\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div className={classNames(styles.hint, visible && styles.visible)}\n\t\t\tonClick={handleClick}\n\t\t\tonKeyPress={handleKeyPress}\n\t\t\ttabIndex=\"0\"\n\t\t\trole=\"button\">\n\t\t\t<div className={classNames(styles.text, visible && styles.visible)}>\n\t\t\t\tAbout me\n\t\t\t</div>\n\t\t\t<div className={classNames(styles.arrow, visible && styles.visible)}>\n\t\t\t\t<FontAwesomeIcon icon={ faArrowDown }/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ScrollHint;\n"]},"metadata":{},"sourceType":"module"}