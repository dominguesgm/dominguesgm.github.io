{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useWindowDimension = () => {\n  const isSSR = true;\n  const {\n    0: windowSize,\n    1: setWindowSize\n  } = useState({\n    width: isSSR ? 1440 : window.innerWidth,\n    height: isSSR ? 800 : window.innerHeight\n  });\n\n  const resizeWindow = () => {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', resizeWindow);\n    return () => window.removeEventListener('resize', resizeWindow);\n  }, []);\n  return windowSize;\n};\n\nexport default useWindowDimension;","map":{"version":3,"sources":["/Users/gil/Projects/dominguesgm.github.io/src/shared/hooks/window-dimension/useWindowDimension.js"],"names":["useState","useEffect","useWindowDimension","isSSR","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","resizeWindow","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAChC,QAAMC,KAAK,OAAX;AAEA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BL,QAAQ,CAAC;AAC5CM,IAAAA,KAAK,EAAEH,KAAK,GAAG,IAAH,GAAUI,MAAM,CAACC,UADe;AAE5CC,IAAAA,MAAM,EAAEN,KAAK,GAAG,GAAH,GAASI,MAAM,CAACG;AAFe,GAAD,CAA5C;;AAKA,QAAMC,YAAY,GAAG,MAAM;AAC1BN,IAAAA,aAAa,CAAC;AAAEC,MAAAA,KAAK,EAAEC,MAAM,CAACC,UAAhB;AAA4BC,MAAAA,MAAM,EAAEF,MAAM,CAACG;AAA3C,KAAD,CAAb;AACA,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACfM,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AAEA,WAAO,MAAMJ,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACA,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAOP,UAAP;AACA,CAnBD;;AAqBA,eAAeF,kBAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useWindowDimension = () => {\n\tconst isSSR = typeof(window) === 'undefined';\n\n\tconst [windowSize, setWindowSize] = useState({\n\t\twidth: isSSR ? 1440 : window.innerWidth,\n\t\theight: isSSR ? 800 : window.innerHeight,\n\t});\n\n\tconst resizeWindow = () => {\n\t\tsetWindowSize({ width: window.innerWidth, height: window.innerHeight });\n\t};\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', resizeWindow);\n\n\t\treturn () => window.removeEventListener('resize', resizeWindow);\n\t}, []);\n\n\treturn windowSize;\n};\n\nexport default useWindowDimension;\n"]},"metadata":{},"sourceType":"module"}