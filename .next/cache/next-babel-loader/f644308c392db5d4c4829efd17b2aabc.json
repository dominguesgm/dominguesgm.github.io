{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nvar useWindowDimension = function useWindowDimension() {\n  _s();\n\n  var isSSR = false;\n\n  var _useState = useState({\n    width: isSSR ? 1440 : window.innerWidth,\n    height: isSSR ? 800 : window.innerHeight\n  }),\n      windowSize = _useState[0],\n      setWindowSize = _useState[1];\n\n  var resizeWindow = function resizeWindow() {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n\n  useEffect(function () {\n    window.addEventListener('resize', resizeWindow);\n    return function () {\n      return window.removeEventListener('resize', resizeWindow);\n    };\n  }, []);\n  return windowSize;\n};\n\n_s(useWindowDimension, \"cIhkERPvvm/QOZ+pc1raLbxLosk=\");\n\nexport default useWindowDimension;","map":{"version":3,"sources":["/Users/gil/Projects/dominguesgm.github.io/src/shared/hooks/window-dimension/useWindowDimension.js"],"names":["useState","useEffect","useWindowDimension","isSSR","width","window","innerWidth","height","innerHeight","windowSize","setWindowSize","resizeWindow","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA;;AAChC,MAAMC,KAAK,QAAX;;AADgC,kBAGIH,QAAQ,CAAC;AAC5CI,IAAAA,KAAK,EAAED,KAAK,GAAG,IAAH,GAAUE,MAAM,CAACC,UADe;AAE5CC,IAAAA,MAAM,EAAEJ,KAAK,GAAG,GAAH,GAASE,MAAM,CAACG;AAFe,GAAD,CAHZ;AAAA,MAGzBC,UAHyB;AAAA,MAGbC,aAHa;;AAQhC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1BD,IAAAA,aAAa,CAAC;AAAEN,MAAAA,KAAK,EAAEC,MAAM,CAACC,UAAhB;AAA4BC,MAAAA,MAAM,EAAEF,MAAM,CAACG;AAA3C,KAAD,CAAb;AACA,GAFD;;AAIAP,EAAAA,SAAS,CAAC,YAAM;AACfI,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AAEA,WAAO;AAAA,aAAMN,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,KAAP;AACA,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAOF,UAAP;AACA,CAnBD;;GAAMP,kB;;AAqBN,eAAeA,kBAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useWindowDimension = () => {\n\tconst isSSR = typeof(window) === 'undefined';\n\n\tconst [windowSize, setWindowSize] = useState({\n\t\twidth: isSSR ? 1440 : window.innerWidth,\n\t\theight: isSSR ? 800 : window.innerHeight,\n\t});\n\n\tconst resizeWindow = () => {\n\t\tsetWindowSize({ width: window.innerWidth, height: window.innerHeight });\n\t};\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', resizeWindow);\n\n\t\treturn () => window.removeEventListener('resize', resizeWindow);\n\t}, []);\n\n\treturn windowSize;\n};\n\nexport default useWindowDimension;\n"]},"metadata":{},"sourceType":"module"}