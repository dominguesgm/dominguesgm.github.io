{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { FontLoader } from 'three';\nimport Text from './helpers/Text';\nimport { generateVectors, gaussianFunction } from '../../../../utils';\nimport fontAsset from '../../../../media/fonts/Montserrat_Medium.json';\nvar GAUSSIAN_PEAK = 50;\n\nvar Name = /*#__PURE__*/function () {\n  // Font stuff\n  function Name(camera, scene) {\n    var _this = this;\n\n    _classCallCheck(this, Name);\n\n    _defineProperty(this, \"text\", null);\n\n    _defineProperty(this, \"vectors\", null);\n\n    _defineProperty(this, \"fontSize\", 65);\n\n    _defineProperty(this, \"fontExtrusion\", 10);\n\n    _defineProperty(this, \"zDepth\", 0);\n\n    _defineProperty(this, \"handleResize\", function () {\n      // This resize must come after camera resize\n      _this.text.letterMeshes.forEach(function (letter) {\n        letter.posZ = _this.camera.zDepth;\n      });\n    });\n\n    this.camera = camera; // TODO: Rethink responsivity\n\n    var fontLoader = new FontLoader();\n    var font = fontLoader.parse(fontAsset);\n    var options = {\n      font: font,\n      fontSize: this.fontSize,\n      fontExtrusion: 10,\n      titleLeftMargin: 100\n    }; // Creating text mesh and adding to scene\n\n    this.text = new Text('Gil Domingues', null, options);\n    this.text.addToScene(scene);\n    this.vectors = generateVectors(13, this.camera.zDepth, GAUSSIAN_PEAK);\n    this.text.letterMeshes.forEach(function (letter) {\n      letter.posX = letter.transX - _this.text.width / 2;\n      letter.posZ = _this.camera.zDepth;\n      letter.mesh.position.x = letter.posX;\n      letter.mesh.position.z = letter.posZ;\n    });\n  }\n\n  _createClass(Name, [{\n    key: \"animate\",\n    value: function animate(time, mouse, enableInteraction) {\n      var _this2 = this;\n\n      var stdDevX = 0.3;\n      var stdDevY = 2.5;\n      var shouldAnimateText = enableInteraction && (mouse.x !== mouse.oldX && mouse.y !== mouse.oldY || mouse.x !== null);\n\n      if (shouldAnimateText) {\n        var xAlongText = (mouse.x - window.innerWidth / 2 + this.text.width / 2) / this.text.width;\n        var yAlongText = (mouse.y - window.innerHeight / 2 + this.text.height / 2) / this.text.height;\n        this.text.letterMeshes.forEach(function (letter, index) {\n          var gaussianFactorX = gaussianFunction(letter.transX / _this2.text.width, xAlongText, stdDevX);\n          var gaussianFactorY = gaussianFunction(yAlongText, 0, stdDevY);\n          var rotationGaussianFactor = gaussianFactorX * gaussianFactorY;\n          var translationGaussianFactor = GAUSSIAN_PEAK * rotationGaussianFactor;\n          letter.mesh.position.x += (letter.posX + _this2.vectors[index].x * translationGaussianFactor - letter.mesh.position.x) * 0.1;\n          letter.mesh.position.y += (letter.posY + _this2.vectors[index].y * translationGaussianFactor - letter.mesh.position.y) * 0.1;\n          letter.mesh.position.z += (letter.posZ + _this2.vectors[index].z * translationGaussianFactor - letter.mesh.position.z) * 0.1; // Rotation\n\n          letter.mesh.rotation.x += (_this2.vectors[index].rotX * rotationGaussianFactor - letter.mesh.rotation.x) * 0.1;\n          letter.mesh.rotation.y += (_this2.vectors[index].rotY * rotationGaussianFactor - letter.mesh.rotation.y) * 0.1;\n          letter.mesh.rotation.z += (_this2.vectors[index].rotZ * rotationGaussianFactor - letter.mesh.rotation.z) * 0.1;\n        });\n      }\n    }\n  }]);\n\n  return Name;\n}();\n\nexport default Name;","map":{"version":3,"sources":["/Users/gil/Projects/dominguesgm.github.io/src/shared/components/canvas/components/name/Name.js"],"names":["FontLoader","Text","generateVectors","gaussianFunction","fontAsset","GAUSSIAN_PEAK","Name","camera","scene","text","letterMeshes","forEach","letter","posZ","zDepth","fontLoader","font","parse","options","fontSize","fontExtrusion","titleLeftMargin","addToScene","vectors","posX","transX","width","mesh","position","x","z","time","mouse","enableInteraction","stdDevX","stdDevY","shouldAnimateText","oldX","y","oldY","xAlongText","window","innerWidth","yAlongText","innerHeight","height","index","gaussianFactorX","gaussianFactorY","rotationGaussianFactor","translationGaussianFactor","posY","rotation","rotX","rotY","rotZ"],"mappings":";;;AAAA,SACCA,UADD,QAEO,OAFP;AAGA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SACCC,eADD,EAECC,gBAFD,QAGO,mBAHP;AAKA,OAAOC,SAAP,MAAsB,gDAAtB;AAEA,IAAMC,aAAa,GAAG,EAAtB;;IAEMC,I;AAIL;AAKA,gBAAYC,MAAZ,EAAoBC,KAApB,EAA2B;AAAA;;AAAA;;AAAA,kCARpB,IAQoB;;AAAA,qCAPjB,IAOiB;;AAAA,sCAJhB,EAIgB;;AAAA,2CAHX,EAGW;;AAAA,oCAFlB,CAEkB;;AAAA,0CA6BZ,YAAM;AACpB;AAEA,MAAA,KAAI,CAACC,IAAL,CAAUC,YAAV,CAAuBC,OAAvB,CAA+B,UAACC,MAAD,EAAY;AAC1CA,QAAAA,MAAM,CAACC,IAAP,GAAc,KAAI,CAACN,MAAL,CAAYO,MAA1B;AACA,OAFD;AAGA,KAnC0B;;AAC1B,SAAKP,MAAL,GAAcA,MAAd,CAD0B,CAG1B;;AAEA,QAAMQ,UAAU,GAAG,IAAIf,UAAJ,EAAnB;AACA,QAAMgB,IAAI,GAAGD,UAAU,CAACE,KAAX,CAAiBb,SAAjB,CAAb;AAEA,QAAMc,OAAO,GAAG;AACfF,MAAAA,IAAI,EAAEA,IADS;AAEfG,MAAAA,QAAQ,EAAE,KAAKA,QAFA;AAGfC,MAAAA,aAAa,EAAE,EAHA;AAIfC,MAAAA,eAAe,EAAE;AAJF,KAAhB,CAR0B,CAe1B;;AACA,SAAKZ,IAAL,GAAY,IAAIR,IAAJ,CAAS,eAAT,EAA0B,IAA1B,EAAgCiB,OAAhC,CAAZ;AACA,SAAKT,IAAL,CAAUa,UAAV,CAAqBd,KAArB;AACA,SAAKe,OAAL,GAAerB,eAAe,CAAC,EAAD,EAAK,KAAKK,MAAL,CAAYO,MAAjB,EAAyBT,aAAzB,CAA9B;AAEA,SAAKI,IAAL,CAAUC,YAAV,CAAuBC,OAAvB,CAA+B,UAACC,MAAD,EAAY;AAC1CA,MAAAA,MAAM,CAACY,IAAP,GAAcZ,MAAM,CAACa,MAAP,GAAgB,KAAI,CAAChB,IAAL,CAAUiB,KAAV,GAAkB,CAAhD;AACAd,MAAAA,MAAM,CAACC,IAAP,GAAc,KAAI,CAACN,MAAL,CAAYO,MAA1B;AAEAF,MAAAA,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBC,CAArB,GAAyBjB,MAAM,CAACY,IAAhC;AACAZ,MAAAA,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBE,CAArB,GAAyBlB,MAAM,CAACC,IAAhC;AACA,KAND;AAOA;;;;4BAUOkB,I,EAAMC,K,EAAOC,iB,EAAmB;AAAA;;AACvC,UAAMC,OAAO,GAAG,GAAhB;AACA,UAAMC,OAAO,GAAG,GAAhB;AAEA,UAAMC,iBAAiB,GAAGH,iBAAiB,KACxCD,KAAK,CAACH,CAAN,KAAYG,KAAK,CAACK,IAAlB,IACFL,KAAK,CAACM,CAAN,KAAYN,KAAK,CAACO,IADjB,IAEDP,KAAK,CAACH,CAAN,KAAY,IAH8B,CAA3C;;AAKA,UAAGO,iBAAH,EAAsB;AACrB,YAAMI,UAAU,GAAG,CAACR,KAAK,CAACH,CAAN,GAAWY,MAAM,CAACC,UAAP,GAAkB,CAA7B,GAAmC,KAAKjC,IAAL,CAAUiB,KAAV,GAAgB,CAApD,IAA0D,KAAKjB,IAAL,CAAUiB,KAAvF;AACA,YAAMiB,UAAU,GAAG,CAACX,KAAK,CAACM,CAAN,GAAWG,MAAM,CAACG,WAAP,GAAmB,CAA9B,GAAoC,KAAKnC,IAAL,CAAUoC,MAAV,GAAiB,CAAtD,IAA4D,KAAKpC,IAAL,CAAUoC,MAAzF;AAEA,aAAKpC,IAAL,CAAUC,YAAV,CAAuBC,OAAvB,CAA+B,UAACC,MAAD,EAASkC,KAAT,EAAmB;AACjD,cAAMC,eAAe,GAAG5C,gBAAgB,CACvCS,MAAM,CAACa,MAAP,GAAgB,MAAI,CAAChB,IAAL,CAAUiB,KADa,EAEvCc,UAFuC,EAGvCN,OAHuC,CAAxC;AAKA,cAAMc,eAAe,GAAG7C,gBAAgB,CACvCwC,UADuC,EAEvC,CAFuC,EAGvCR,OAHuC,CAAxC;AAMA,cAAMc,sBAAsB,GAAGF,eAAe,GAAGC,eAAjD;AACA,cAAME,yBAAyB,GAAG7C,aAAa,GAAG4C,sBAAlD;AAEArC,UAAAA,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBC,CAArB,IAA0B,CAACjB,MAAM,CAACY,IAAP,GAAc,MAAI,CAACD,OAAL,CAAauB,KAAb,EAAoBjB,CAApB,GAAwBqB,yBAAtC,GAAkEtC,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBC,CAAxF,IAA6F,GAAvH;AACAjB,UAAAA,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBU,CAArB,IAA0B,CAAC1B,MAAM,CAACuC,IAAP,GAAc,MAAI,CAAC5B,OAAL,CAAauB,KAAb,EAAoBR,CAApB,GAAwBY,yBAAtC,GAAkEtC,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBU,CAAxF,IAA6F,GAAvH;AACA1B,UAAAA,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBE,CAArB,IAA0B,CAAClB,MAAM,CAACC,IAAP,GAAc,MAAI,CAACU,OAAL,CAAauB,KAAb,EAAoBhB,CAApB,GAAwBoB,yBAAtC,GAAkEtC,MAAM,CAACe,IAAP,CAAYC,QAAZ,CAAqBE,CAAxF,IAA6F,GAAvH,CAjBiD,CAmBjD;;AACAlB,UAAAA,MAAM,CAACe,IAAP,CAAYyB,QAAZ,CAAqBvB,CAArB,IAA0B,CAAC,MAAI,CAACN,OAAL,CAAauB,KAAb,EAAoBO,IAApB,GAA2BJ,sBAA3B,GAAoDrC,MAAM,CAACe,IAAP,CAAYyB,QAAZ,CAAqBvB,CAA1E,IAA+E,GAAzG;AACAjB,UAAAA,MAAM,CAACe,IAAP,CAAYyB,QAAZ,CAAqBd,CAArB,IAA0B,CAAC,MAAI,CAACf,OAAL,CAAauB,KAAb,EAAoBQ,IAApB,GAA2BL,sBAA3B,GAAoDrC,MAAM,CAACe,IAAP,CAAYyB,QAAZ,CAAqBd,CAA1E,IAA+E,GAAzG;AACA1B,UAAAA,MAAM,CAACe,IAAP,CAAYyB,QAAZ,CAAqBtB,CAArB,IAA0B,CAAC,MAAI,CAACP,OAAL,CAAauB,KAAb,EAAoBS,IAApB,GAA2BN,sBAA3B,GAAoDrC,MAAM,CAACe,IAAP,CAAYyB,QAAZ,CAAqBtB,CAA1E,IAA+E,GAAzG;AACA,SAvBD;AAwBA;AACD;;;;;;AAGF,eAAexB,IAAf","sourcesContent":["import {\n\tFontLoader,\n} from 'three';\nimport Text from './helpers/Text';\nimport {\n\tgenerateVectors,\n\tgaussianFunction,\n} from '../../../../utils';\n\nimport fontAsset from '../../../../media/fonts/Montserrat_Medium.json';\n\nconst GAUSSIAN_PEAK = 50;\n\nclass Name {\n\ttext = null;\n\tvectors = null;\n\n\t// Font stuff\n\tfontSize = 65;\n\tfontExtrusion = 10;\n\tzDepth = 0;\n\n\tconstructor(camera, scene) {\n\t\tthis.camera = camera;\n\n\t\t// TODO: Rethink responsivity\n\n\t\tconst fontLoader = new FontLoader();\n\t\tconst font = fontLoader.parse(fontAsset);\n\n\t\tconst options = {\n\t\t\tfont: font,\n\t\t\tfontSize: this.fontSize,\n\t\t\tfontExtrusion: 10,\n\t\t\ttitleLeftMargin: 100,\n\t\t};\n\n\t\t// Creating text mesh and adding to scene\n\t\tthis.text = new Text('Gil Domingues', null, options);\n\t\tthis.text.addToScene(scene);\n\t\tthis.vectors = generateVectors(13, this.camera.zDepth, GAUSSIAN_PEAK);\n\n\t\tthis.text.letterMeshes.forEach((letter) => {\n\t\t\tletter.posX = letter.transX - this.text.width / 2;\n\t\t\tletter.posZ = this.camera.zDepth;\n\n\t\t\tletter.mesh.position.x = letter.posX;\n\t\t\tletter.mesh.position.z = letter.posZ;\n\t\t});\n\t}\n\n\thandleResize = () => {\n\t\t// This resize must come after camera resize\n\n\t\tthis.text.letterMeshes.forEach((letter) => {\n\t\t\tletter.posZ = this.camera.zDepth;\n\t\t});\n\t}\n\n\tanimate(time, mouse, enableInteraction) {\n\t\tconst stdDevX = 0.3;\n\t\tconst stdDevY = 2.5;\n\n\t\tconst shouldAnimateText = enableInteraction &&\n\t\t\t((mouse.x !== mouse.oldX &&\n\t\t\tmouse.y !== mouse.oldY) ||\n\t\t\tmouse.x !== null);\n\n\t\tif(shouldAnimateText) {\n\t\t\tconst xAlongText = (mouse.x - (window.innerWidth/2) + (this.text.width/2)) / this.text.width;\n\t\t\tconst yAlongText = (mouse.y - (window.innerHeight/2) + (this.text.height/2)) / this.text.height;\n\n\t\t\tthis.text.letterMeshes.forEach((letter, index) => {\n\t\t\t\tconst gaussianFactorX = gaussianFunction(\n\t\t\t\t\tletter.transX / this.text.width,\n\t\t\t\t\txAlongText,\n\t\t\t\t\tstdDevX\n\t\t\t\t);\n\t\t\t\tconst gaussianFactorY = gaussianFunction(\n\t\t\t\t\tyAlongText,\n\t\t\t\t\t0,\n\t\t\t\t\tstdDevY\n\t\t\t\t);\n\n\t\t\t\tconst rotationGaussianFactor = gaussianFactorX * gaussianFactorY;\n\t\t\t\tconst translationGaussianFactor = GAUSSIAN_PEAK * rotationGaussianFactor;\n\n\t\t\t\tletter.mesh.position.x += (letter.posX + this.vectors[index].x * translationGaussianFactor - letter.mesh.position.x) * 0.1;\n\t\t\t\tletter.mesh.position.y += (letter.posY + this.vectors[index].y * translationGaussianFactor - letter.mesh.position.y) * 0.1;\n\t\t\t\tletter.mesh.position.z += (letter.posZ + this.vectors[index].z * translationGaussianFactor - letter.mesh.position.z) * 0.1;\n\n\t\t\t\t// Rotation\n\t\t\t\tletter.mesh.rotation.x += (this.vectors[index].rotX * rotationGaussianFactor - letter.mesh.rotation.x) * 0.1;\n\t\t\t\tletter.mesh.rotation.y += (this.vectors[index].rotY * rotationGaussianFactor - letter.mesh.rotation.y) * 0.1;\n\t\t\t\tletter.mesh.rotation.z += (this.vectors[index].rotZ * rotationGaussianFactor - letter.mesh.rotation.z) * 0.1;\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport default Name;\n"]},"metadata":{},"sourceType":"module"}