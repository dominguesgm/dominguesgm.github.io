{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gil/Projects/dominguesgm.github.io/src/shared/components/canvas/Canvas.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'class-names';\nimport { WebGLRenderer, Scene } from 'three';\nimport { Lighting, Camera, Name, Laptop } from './components';\nimport styles from './Canvas.css';\n\nvar Canvas = /*#__PURE__*/function (_Component) {\n  _inherits(Canvas, _Component);\n\n  var _super = _createSuper(Canvas);\n\n  function Canvas() {\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"requestAnimationFrameID\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"canvas\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"renderer\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"scene\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"camera\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"mouse\", {\n      x: null,\n      y: null,\n      oldX: null,\n      oldY: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"prevTime\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"objects\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResize\", function () {\n      _this.camera.handleResize();\n\n      _this.objects.forEach(function (item) {\n        return item.handleResize();\n      });\n\n      _this.renderer.setSize(window.innerWidth, window.innerHeight);\n\n      _this.onResize && _this.onResize();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseMove\", function (event) {\n      _this.mouse.oldX = _this.mouse.x;\n      _this.mouse.oldY = _this.mouse.y;\n      _this.mouse.x = event.clientX;\n      _this.mouse.y = event.clientY;\n      _this.onMouseMove && _this.onMouseMove();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setup\", function () {\n      _this.scene = new Scene();\n      _this.renderer = new WebGLRenderer({\n        canvas: _this.canvas.current,\n        antialias: true,\n        alpha: true\n      });\n\n      _this.renderer.setSize(window.innerWidth, window.innerHeight);\n\n      _this.renderer.setClearColor('#08090A', 0);\n\n      _this.camera = new Camera();\n      _this.lighting = new Lighting();\n\n      _this.lighting.lights.forEach(function (light) {\n        _this.scene.add(light);\n      });\n\n      _this.objects.push(new Name(_this.camera, _this.scene)); // this.objects.push(new Laptop(this.camera, this.scene));\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function (time) {\n      // This was used to wait for external assets to load before starting to animate webgl\n      // and thus sync up threejs and css animations\n      // if(!window.GLOBAL_PAGE_HAS_LOADED) {\n      // \tthis.requestAnimationFrameID = requestAnimationFrame( this.animate );\n      // \treturn false;\n      // }\n      if (_this.trueStart == undefined) {\n        _this.trueStart = time;\n      } // Call all animations\n\n\n      var _this$camera$animate = _this.camera.animate(time - _this.trueStart),\n          isDone = _this$camera$animate.isDone;\n\n      _this.objects.forEach(function (object) {\n        object.animate(time - _this.trueStart, _this.mouse, isDone);\n      }); // Render current frame and prepare next frame\n\n\n      _this.renderer.render(_this.scene, _this.camera.instance);\n\n      _this.prevTime = time;\n      _this.requestAnimationFrameID = requestAnimationFrame(_this.animate);\n    });\n\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('mousemove', this.handleMouseMove);\n      window.addEventListener('resize', this.handleResize, {\n        passive: true\n      });\n      this.setup();\n      this.requestAnimationFrameID = requestAnimationFrame(this.animate);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // remove event listener\n      window.removeEventListener('mousemove', this.handleMouseMove);\n      window.removeEventListener('resize', this.handleResize, {\n        passive: true\n      });\n      cancelAnimationFrame(this.requestAnimationFrameID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"canvas\", {\n        className: classNames(styles.canvas, !this.props.isTouchable && styles.notTouchable),\n        ref: this.canvas,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 4\n        }\n      });\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nCanvas.propTypes = {\n  isTouchable: PropTypes.bool\n};\nCanvas.defaultProps = {\n  isTouchable: true\n};\nexport default Canvas;","map":{"version":3,"sources":["/Users/gil/Projects/dominguesgm.github.io/src/shared/components/canvas/Canvas.js"],"names":["React","Component","PropTypes","classNames","WebGLRenderer","Scene","Lighting","Camera","Name","Laptop","styles","Canvas","createRef","x","y","oldX","oldY","camera","handleResize","objects","forEach","item","renderer","setSize","window","innerWidth","innerHeight","onResize","event","mouse","clientX","clientY","onMouseMove","scene","canvas","current","antialias","alpha","setClearColor","lighting","lights","light","add","push","time","trueStart","undefined","animate","isDone","object","render","instance","prevTime","requestAnimationFrameID","requestAnimationFrame","addEventListener","handleMouseMove","passive","setup","removeEventListener","cancelAnimationFrame","props","isTouchable","notTouchable","propTypes","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'class-names';\nimport {\n\tWebGLRenderer,\n\tScene,\n} from 'three';\n\nimport {\n\tLighting,\n\tCamera,\n\tName,\n\tLaptop,\n} from './components';\n\nimport styles from './Canvas.css';\n\nclass Canvas extends Component {\n\trequestAnimationFrameID = null;\n\tcanvas = React.createRef();\n\trenderer = null;\n\tscene = null;\n\tcamera = null;\n\tmouse = {\n\t\tx: null,\n\t\ty: null,\n\t\toldX: null,\n\t\toldY: null,\n\t};\n\tprevTime = 0;\n\tobjects = [];\n\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('mousemove', this.handleMouseMove);\n\t\twindow.addEventListener('resize', this.handleResize, { passive: true });\n\n\t\tthis.setup();\n\n\t\tthis.requestAnimationFrameID = requestAnimationFrame( this.animate );\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// remove event listener\n\t\twindow.removeEventListener('mousemove', this.handleMouseMove);\n\t\twindow.removeEventListener('resize', this.handleResize, { passive: true });\n\t\tcancelAnimationFrame(this.requestAnimationFrameID);\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<canvas className={ classNames(styles.canvas, !this.props.isTouchable && styles.notTouchable) } ref={ this.canvas } />\n\t\t);\n\t}\n\n\thandleResize = () => {\n\t\tthis.camera.handleResize();\n\t\tthis.objects.forEach((item) => item.handleResize());\n\n\t\tthis.renderer.setSize( window.innerWidth, window.innerHeight );\n\n\n\t\tthis.onResize && this.onResize();\n\t}\n\n\thandleMouseMove = (event) => {\n\t\tthis.mouse.oldX = this.mouse.x;\n\t\tthis.mouse.oldY = this.mouse.y;\n\t\tthis.mouse.x = event.clientX;\n\t\tthis.mouse.y = event.clientY;\n\n\t\tthis.onMouseMove && this.onMouseMove();\n\t}\n\n\tsetup = () => {\n\t\tthis.scene = new Scene();\n\n\t\tthis.renderer = new WebGLRenderer({ canvas: this.canvas.current, antialias: true, alpha: true });\n\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\n\t\tthis.renderer.setClearColor('#08090A', 0);\n\n\t\tthis.camera = new Camera();\n\n\t\tthis.lighting = new Lighting();\n\t\tthis.lighting.lights.forEach((light) => {\n\t\t\tthis.scene.add(light);\n\t\t});\n\n\t\tthis.objects.push(new Name(this.camera, this.scene));\n\t\t// this.objects.push(new Laptop(this.camera, this.scene));\n\n\t}\n\n\tanimate = (time) => {\n\t\t// This was used to wait for external assets to load before starting to animate webgl\n\t\t// and thus sync up threejs and css animations\n\n\t\t// if(!window.GLOBAL_PAGE_HAS_LOADED) {\n\t\t// \tthis.requestAnimationFrameID = requestAnimationFrame( this.animate );\n\t\t// \treturn false;\n\t\t// }\n\n\t\tif(this.trueStart == undefined) {\n\t\t\tthis.trueStart = time;\n\t\t}\n\n\t\t// Call all animations\n\t\tconst { isDone } = this.camera.animate(time - this.trueStart);\n\t\tthis.objects.forEach((object) => {\n\t\t\tobject.animate(time - this.trueStart, this.mouse, isDone);\n\t\t});\n\n\t\t// Render current frame and prepare next frame\n\t\tthis.renderer.render( this.scene, this.camera.instance );\n\t\tthis.prevTime = time;\n\t\tthis.requestAnimationFrameID = requestAnimationFrame( this.animate );\n\t}\n\n}\n\nCanvas.propTypes = {\n\tisTouchable: PropTypes.bool,\n};\n\nCanvas.defaultProps = {\n\tisTouchable: true,\n};\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}