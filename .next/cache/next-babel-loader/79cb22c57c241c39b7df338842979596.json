{"ast":null,"code":"var _jsxFileName = \"/Users/gil/Projects/dominguesgm.github.io/src/shared/components/canvas/Canvas.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'class-names';\nimport { WebGLRenderer, Scene } from 'three';\nimport { Lighting, Camera, Name, Laptop } from './components';\nimport styles from './Canvas.css';\n\nclass Canvas extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"requestAnimationFrameID\", null);\n\n    _defineProperty(this, \"canvas\", React.createRef());\n\n    _defineProperty(this, \"renderer\", null);\n\n    _defineProperty(this, \"scene\", null);\n\n    _defineProperty(this, \"camera\", null);\n\n    _defineProperty(this, \"mouse\", {\n      x: null,\n      y: null,\n      oldX: null,\n      oldY: null\n    });\n\n    _defineProperty(this, \"prevTime\", 0);\n\n    _defineProperty(this, \"objects\", []);\n\n    _defineProperty(this, \"handleResize\", () => {\n      this.camera.handleResize();\n      this.objects.forEach(item => item.handleResize());\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.onResize && this.onResize();\n    });\n\n    _defineProperty(this, \"handleMouseMove\", event => {\n      this.mouse.oldX = this.mouse.x;\n      this.mouse.oldY = this.mouse.y;\n      this.mouse.x = event.clientX;\n      this.mouse.y = event.clientY;\n      this.onMouseMove && this.onMouseMove();\n    });\n\n    _defineProperty(this, \"setup\", () => {\n      this.scene = new Scene();\n      this.renderer = new WebGLRenderer({\n        canvas: this.canvas.current,\n        antialias: true,\n        alpha: true\n      });\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.renderer.setClearColor('#08090A', 0);\n      this.camera = new Camera();\n      this.lighting = new Lighting();\n      this.lighting.lights.forEach(light => {\n        this.scene.add(light);\n      });\n      this.objects.push(new Name(this.camera, this.scene)); // this.objects.push(new Laptop(this.camera, this.scene));\n    });\n\n    _defineProperty(this, \"animate\", time => {\n      // This was used to wait for external assets to load before starting to animate webgl\n      // and thus sync up threejs and css animations\n      // if(!window.GLOBAL_PAGE_HAS_LOADED) {\n      // \tthis.requestAnimationFrameID = requestAnimationFrame( this.animate );\n      // \treturn false;\n      // }\n      if (this.trueStart == undefined) {\n        this.trueStart = time;\n      } // Call all animations\n\n\n      const {\n        isDone\n      } = this.camera.animate(time - this.trueStart);\n      this.objects.forEach(object => {\n        object.animate(time - this.trueStart, this.mouse, isDone);\n      }); // Render current frame and prepare next frame\n\n      this.renderer.render(this.scene, this.camera.instance);\n      this.prevTime = time;\n      this.requestAnimationFrameID = requestAnimationFrame(this.animate);\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousemove', this.handleMouseMove);\n    window.addEventListener('resize', this.handleResize, {\n      passive: true\n    });\n    this.setup();\n    this.requestAnimationFrameID = requestAnimationFrame(this.animate);\n  }\n\n  componentWillUnmount() {\n    // remove event listener\n    window.removeEventListener('mousemove', this.handleMouseMove);\n    window.removeEventListener('resize', this.handleResize, {\n      passive: true\n    });\n    cancelAnimationFrame(this.requestAnimationFrameID);\n  }\n\n  render() {\n    return __jsx(\"canvas\", {\n      className: classNames(styles.canvas, !this.props.isTouchable && styles.notTouchable),\n      ref: this.canvas,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    });\n  }\n\n}\n\nCanvas.propTypes = {\n  isTouchable: PropTypes.bool\n};\nCanvas.defaultProps = {\n  isTouchable: true\n};\nexport default Canvas;","map":{"version":3,"sources":["/Users/gil/Projects/dominguesgm.github.io/src/shared/components/canvas/Canvas.js"],"names":["React","Component","PropTypes","classNames","WebGLRenderer","Scene","Lighting","Camera","Name","Laptop","styles","Canvas","createRef","x","y","oldX","oldY","camera","handleResize","objects","forEach","item","renderer","setSize","window","innerWidth","innerHeight","onResize","event","mouse","clientX","clientY","onMouseMove","scene","canvas","current","antialias","alpha","setClearColor","lighting","lights","light","add","push","time","trueStart","undefined","isDone","animate","object","render","instance","prevTime","requestAnimationFrameID","requestAnimationFrame","componentDidMount","addEventListener","handleMouseMove","passive","setup","componentWillUnmount","removeEventListener","cancelAnimationFrame","props","isTouchable","notTouchable","propTypes","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'class-names';\nimport {\n\tWebGLRenderer,\n\tScene,\n} from 'three';\n\nimport {\n\tLighting,\n\tCamera,\n\tName,\n\tLaptop,\n} from './components';\n\nimport styles from './Canvas.css';\n\nclass Canvas extends Component {\n\trequestAnimationFrameID = null;\n\tcanvas = React.createRef();\n\trenderer = null;\n\tscene = null;\n\tcamera = null;\n\tmouse = {\n\t\tx: null,\n\t\ty: null,\n\t\toldX: null,\n\t\toldY: null,\n\t};\n\tprevTime = 0;\n\tobjects = [];\n\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('mousemove', this.handleMouseMove);\n\t\twindow.addEventListener('resize', this.handleResize, { passive: true });\n\n\t\tthis.setup();\n\n\t\tthis.requestAnimationFrameID = requestAnimationFrame( this.animate );\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// remove event listener\n\t\twindow.removeEventListener('mousemove', this.handleMouseMove);\n\t\twindow.removeEventListener('resize', this.handleResize, { passive: true });\n\t\tcancelAnimationFrame(this.requestAnimationFrameID);\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<canvas className={ classNames(styles.canvas, !this.props.isTouchable && styles.notTouchable) } ref={ this.canvas } />\n\t\t);\n\t}\n\n\thandleResize = () => {\n\t\tthis.camera.handleResize();\n\t\tthis.objects.forEach((item) => item.handleResize());\n\n\t\tthis.renderer.setSize( window.innerWidth, window.innerHeight );\n\n\n\t\tthis.onResize && this.onResize();\n\t}\n\n\thandleMouseMove = (event) => {\n\t\tthis.mouse.oldX = this.mouse.x;\n\t\tthis.mouse.oldY = this.mouse.y;\n\t\tthis.mouse.x = event.clientX;\n\t\tthis.mouse.y = event.clientY;\n\n\t\tthis.onMouseMove && this.onMouseMove();\n\t}\n\n\tsetup = () => {\n\t\tthis.scene = new Scene();\n\n\t\tthis.renderer = new WebGLRenderer({ canvas: this.canvas.current, antialias: true, alpha: true });\n\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\n\t\tthis.renderer.setClearColor('#08090A', 0);\n\n\t\tthis.camera = new Camera();\n\n\t\tthis.lighting = new Lighting();\n\t\tthis.lighting.lights.forEach((light) => {\n\t\t\tthis.scene.add(light);\n\t\t});\n\n\t\tthis.objects.push(new Name(this.camera, this.scene));\n\t\t// this.objects.push(new Laptop(this.camera, this.scene));\n\n\t}\n\n\tanimate = (time) => {\n\t\t// This was used to wait for external assets to load before starting to animate webgl\n\t\t// and thus sync up threejs and css animations\n\n\t\t// if(!window.GLOBAL_PAGE_HAS_LOADED) {\n\t\t// \tthis.requestAnimationFrameID = requestAnimationFrame( this.animate );\n\t\t// \treturn false;\n\t\t// }\n\n\t\tif(this.trueStart == undefined) {\n\t\t\tthis.trueStart = time;\n\t\t}\n\n\t\t// Call all animations\n\t\tconst { isDone } = this.camera.animate(time - this.trueStart);\n\t\tthis.objects.forEach((object) => {\n\t\t\tobject.animate(time - this.trueStart, this.mouse, isDone);\n\t\t});\n\n\t\t// Render current frame and prepare next frame\n\t\tthis.renderer.render( this.scene, this.camera.instance );\n\t\tthis.prevTime = time;\n\t\tthis.requestAnimationFrameID = requestAnimationFrame( this.animate );\n\t}\n\n}\n\nCanvas.propTypes = {\n\tisTouchable: PropTypes.bool,\n};\n\nCanvas.defaultProps = {\n\tisTouchable: true,\n};\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}